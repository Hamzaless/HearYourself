<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EOBr/h94+bg65gAfwgAAAABJRU5ErkJggg==
</value>
  </data>
</root>